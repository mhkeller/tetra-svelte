{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/components/Settings.svelte",
    "../src/components/SettingsButton.svelte",
    "../src/components/Camera.svelte",
    "../src/components/TranslateDrawer.svelte",
    "../src/components/Box.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Camera from './components/Camera.svelte';\n\timport Settings from './components/Settings.svelte';\n\timport SettingsButton from './components/SettingsButton.svelte';\n\n\tlet inputLanguage = 'fr';\n\tlet outputLanguage = 'en';\n\n\tlet ocrKey = window.localStorage.getItem('ocr_key');\n\tlet translateKey = window.localStorage.getItem('translate_key');\n\n\tlet showSettings = !ocrKey || !translateKey;\n</script>\n\n<style>\n\t:global(body) {\n\t\tbackground-color: #000;\n\t}\n</style>\n\n{#if showSettings}\n\t<Settings\n\t\tbind:inputLanguage\n\t\tbind:outputLanguage\n\t\tbind:ocrKey\n\t\tbind:translateKey\n\t\tbind:showSettings\n\t/>\n{:else}\n\t<SettingsButton\n\t\tbind:showSettings\n\t/>\n\t<Camera\n\t\tbind:showSettings\n\t\t{inputLanguage}\n\t\t{outputLanguage}\n\t\t{ocrKey}\n\t\t{translateKey}\n\t/>\n{/if}\n\n",
    "<script>\n\texport let inputLanguage = 'fr';\n\texport let outputLanguage = 'en';\n\texport let ocrKey;\n\texport let translateKey;\n\texport let showSettings;\n</script>\n\n<style>\n\t.input-container {\n\t\tpadding: 14px;\n\t}\n\tinput {\n\t\twidth: 100%;\n\t}\n</style>\n\n<div class=\"input-container\">\n\t<button\n\t\ton:click={() => showSettings = false}\n\t>Close</button>\n\t<input\n\t\tplaceholder=\"Input language...\"\n\t\tbind:value={inputLanguage}\n\t/>\n\t<input\n\t\tplaceholder=\"Output language...\"\n\t\tbind:value={outputLanguage}\n\t/>\n\t<input\n\t\tplaceholder=\"Enter OCR key...\"\n\t\tbind:value={ocrKey}\n\t/>\n\t<input\n\t\tplaceholder=\"Enter translation key...\"\n\t\tbind:value={translateKey}\n\t/>\n</div>\n",
    "<script>\n\texport let showSettings;\n</script>\n\n<style>\n\t.show-settings {\n\t\tposition: fixed;\n\t\ttop: 7px;\n\t\tleft: 3px;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tbackground: url(settings-btn-white.svg);\n\t\tbackground-size: contain;\n\t\tbackground-repeat: no-repeat;\n\t\tcursor: pointer;\n\t}\n</style>\n\n<div\n\ton:click={() => showSettings = true}\n\tclass=\"show-settings\"></div>\n",
    "<script>\n\timport scaleCanvas from '../modules/scaleCanvas.js';\n\timport Box from './Box.svelte';\n\timport TranslateDrawer from './TranslateDrawer.svelte';\n\timport { onMount } from 'svelte';\n\timport { wordToTranslate } from '../modules/stores.js';\n\n\texport let inputLanguage;\n\texport let outputLanguage;\n\texport let ocrKey;\n\texport let translateKey;\n\n\tconsole.log('input', inputLanguage);\n\tconsole.log('output', outputLanguage);\n\n\tlet width;\n\tlet height;\n\tlet boxes;\n\tlet wtt = null;\n\tlet imageContainer;\n\tlet canvasContainer;\n\n\twordToTranslate.subscribe(val => {\n\t\twtt = val;\n\t});\n\n\tfunction imageLoaded (canvas) {\n\t\t// This doesn't seem to clear the contents\n\t\tcanvasContainer.innerHTML = '';\n\t\tboxes = null;\n\t\tcanvasContainer.appendChild(canvas);\n\t\t// This doesn't asign values to `width` or `height`\n\t\twidth = canvas.style.width.replace('px', '');\n\t\theight = canvas.style.height.replace('px', '');\n\n\t\tconst base64 = canvas.toDataURL().split(',')[1];\n\t\tdoOcr(base64);\n\t}\n\n\tfunction doOcr (base64) {\n\t\t(async () => {\n\t\t\tconst response = await window.fetch(`https://vision.googleapis.com/v1/images:annotate?key=${ocrKey}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\trequests: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\timage: {\n\t\t\t\t\t\t\t\tcontent: base64\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfeatures: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'TEXT_DETECTION'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\timageContext: {\n\t\t\t\t\t\t\t\tlanguageHints: [inputLanguage]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t});\n\t\t\tconst res = await response.json();\n\n\t\t\t// const { data } = await worker.recognize(canvas);\n\t\t\tconsole.log(res);\n\t\t\tboxes = res.responses[0].textAnnotations;\n\t\t\t// await worker.terminate();\n\t\t})();\n\t}\n\n\tlet files = [];\n\tconst options = {\n\t\tmaxWidth: window.innerWidth,\n\t\tmaxHeight: window.innerHeight * 0.92,\n\t\t// pixelRatio: window.devicePixelRatio,\n\t\tcanvas: true,\n\t\t// orientation: true,\n\t\tcover: true\n\t};\n\n\t$: file = files[0];\n\t$: if (file) window.loadImage(file, imageLoaded, options);\n</script>\n\n<style>\n\t.open-camera {\n\t\tposition: fixed;\n\t\twidth: 100%;\n\t\theight: 8%;\n\t\tbottom: 0;\n\t\tbackground-color: #6699cc;\n\t\tborder-top-left-radius: 5px;\n\t\tborder-top-right-radius: 5px;\n\t}\n\t.open-camera:after {\n\t\tcontent: 'Take picture!';\n\t\tposition: absolute;\n\t\tcolor: #000;\n\t\ttop: 50%;\n\t\tfont-size: 20px;\n\t\tfont-family: Helvetica, sans-serif;\n\t\tleft: 50%;\n\t\tpointer-events: none;\n\t\ttransform: translate(-50%, -50%);\n\t}\n\t.open-camera:hover {\n\t\tbackground-color: #538cc6;\n\t}\n\tinput {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\topacity: 0;\n\t\tcursor: pointer;\n\t}\n\n\timg {\n\t\tmax-width: 100%;\n\t\tmax-height: 90vh;\n\t\tvisibility: hidden;\n\t}\n\n\t.image-container {\n\t\tposition: relative;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, 0);\n\t\toverflow-y: scroll;\n\t\toverflow-x: hidden;\n\t}\n\n\tcanvas{\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\t.image-overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\t.wtt {\n\t\theight: 70% !important;\n\t}\n</style>\n\n<div\n\tclass=\"image-container\"\n\tstyle=\"width:{width}px; height:{height}px;\"\n\tbind:this={imageContainer}\n\tclass:wtt={wtt !== null}\n>\n\t<div bind:this={canvasContainer}></div>\n\t<div\n\t\tclass=\"image-overlay\"\n\t>\n\t\t{#if boxes}\n\t\t\t{#each boxes as box}\n\t\t\t\t{#if !box.locale}\n\t\t\t\t\t<Box {box} />\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t{/if}\n\t</div>\n</div>\n\n{#if wtt !== null}\n\t<TranslateDrawer\n\t\t{inputLanguage}\n\t\t{outputLanguage}\n\t\t{translateKey}\n\t/>\n{/if}\n<div class=\"open-camera\">\n\t<input\n\t\ttype=\"file\"\n\t\tcapture=\"camera\"\n\t\taccept=\"image/*\"\n\t\tname=\"cameraInput\"\n\t\tbind:files\n\t>\n</div>\n",
    "<script>\n\timport { wordToTranslate } from '../modules/stores.js';\n\timport { onMount } from 'svelte';\n\n\tlet wtt;\n\tlet translations;\n\tlet input;\n\n\texport let translateKey;\n\texport let inputLanguage;\n\texport let outputLanguage;\n\n\tonMount(() => {\n\t\twordToTranslate.subscribe(val => {\n\t\t\tif (document.activeElement !== input) {\n\t\t\t\tif (input) {\n\t\t\t\t\tinput.value = sanitize(val) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t\twtt = val;\n\t\t\tdoTranslation(val);\n\t\t});\n\t});\n\n\tasync function doTranslation (val) {\n\t\tconst response = await window.fetch(`https://translation.googleapis.com/language/translate/v2?q=${val}&source=${inputLanguage}&target=${outputLanguage}&key=${translateKey}`, {\n\t\t\tmethod: 'POST'\n\t\t});\n\t\tconst res = await response.json();\n\t\ttranslations = res.data.translations;\n\t}\n\n\tfunction destroy () {\n\t\tinput.value = null;\n\t\twordToTranslate.set(null);\n\t}\n\n\tfunction sanitize (val) {\n\t\treturn typeof val === 'string' ? val.replace(/(\\.|!|\\?|,)/g, '') : val;\n\t}\n</script>\n\n<style>\n\t.translate-drawer {\n\t\tbackground-color: #e8e5de;\n\t\tcolor: #000;\n\t\tpadding: 20px;\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\ttop: 70%;\n\t\tz-index: 9;\n\t}\n\tinput {\n\t\tbackground-color: #f2f0ec;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t}\n\t.translated-text {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\t.close-btn {\n\t\tbackground-color: #99cc99;\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\theight: 2%;\n\t\tleft: 0;\n\t\tright: 0;\n\t\ttext-align: center;\n\t\tpadding: 20px 0;\n\t\tcursor: pointer;\n\t\tborder-top: 1px solid #000;\n\t}\n\t.close-btn:after {\n\t\tcontent: 'Close';\n\t\tposition: absolute;\n\t\tcolor: #000;\n\t\ttop: 50%;\n\t\tfont-size: 20px;\n\t\tfont-family: Helvetica, sans-serif;\n\t\tleft: 50%;\n\t\tpointer-events: none;\n\t\ttransform: translate(-50%, -50%);\n\t}\n\n\t.close-btn:hover {\n\t\tbackground-color: #85c185;\n\t}\n\t.close-btn:active {\n\t\tbackground-color: #7bbc7b;\n\t}\n</style>\n\n{#if wtt !== null}\n\t<div\n\t\tclass=\"translate-drawer\"\n\t>\n\t\t<input bind:this={input} type=\"search\" on:input={(e) => wordToTranslate.set(e.target.value)}/>\n\t\t<div\n\t\t\tclass=\"translated-text\"\n\t\t>\n\t\t\t{#if translations}\n\t\t\t\t{#each translations as translation}\n\t\t\t\t\t<div class=\"translated-word\">{sanitize(translation.translatedText)}</div>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</div>\n\t\t<div class=\"close-btn\" on:click=\"{destroy}\"></div>\n\t</div>\n{/if}\n",
    "<script>\nimport { wordToTranslate } from '../modules/stores.js';\nexport let box;\n\nlet activeWord;\n\nwordToTranslate.subscribe(val => {\n\tactiveWord = val;\n});\n\nfunction sendForTranslation () {\n\twordToTranslate.set(box.description);\n}\n</script>\n\n<style>\n\t.box {\n\t\tposition: absolute;\n\t\tborder: 1px solid red;\n\t}\n\t.active {\n\t\tbackground-color: rgba(255, 0, 0, .35);\n\t}\n</style>\n\n<div\n\tclass=\"box {box.description === activeWord ? 'active' : ''}\"\n\tstyle=\"left: {box.boundingPoly.vertices[0].x}px; top: {box.boundingPoly.vertices[0].y}px; width: {box.boundingPoly.vertices[1].x - box.boundingPoly.vertices[0].x}px; height: {box.boundingPoly.vertices[2].y - box.boundingPoly.vertices[0].y}px\"\n\ton:click={sendForTranslation}\n\t></div>\n"
  ],
  "names": [],
  "mappings": "AAeS,IAAI,AAAE,CAAC,AACd,gBAAgB,CAAE,IAAI,AACvB,CAAC;ACRD,gBAAgB,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,AACd,CAAC,AACD,KAAK,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACZ,CAAC;ACTD,cAAc,eAAC,CAAC,AACf,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,sBAAsB,CAAC,CACvC,eAAe,CAAE,OAAO,CACxB,iBAAiB,CAAE,SAAS,CAC5B,MAAM,CAAE,OAAO,AAChB,CAAC;ACsED,YAAY,eAAC,CAAC,AACb,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,EAAE,CACV,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,OAAO,CACzB,sBAAsB,CAAE,GAAG,CAC3B,uBAAuB,CAAE,GAAG,AAC7B,CAAC,AACD,2BAAY,MAAM,AAAC,CAAC,AACnB,OAAO,CAAE,eAAe,CACxB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,SAAS,CAAC,CAAC,UAAU,CAClC,IAAI,CAAE,GAAG,CACT,cAAc,CAAE,IAAI,CACpB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,AACjC,CAAC,AACD,2BAAY,MAAM,AAAC,CAAC,AACnB,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACD,KAAK,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,OAAO,AAChB,CAAC,AAQD,gBAAgB,eAAC,CAAC,AACjB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAC7B,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,MAAM,AACnB,CAAC,AAOD,cAAc,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AACD,IAAI,eAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,UAAU,AACvB,CAAC;ACpGD,iBAAiB,cAAC,CAAC,AAClB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,KAAK,CACf,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,GAAG,CAAE,GAAG,CACR,OAAO,CAAE,CAAC,AACX,CAAC,AACD,KAAK,cAAC,CAAC,AACN,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,gBAAgB,cAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACpB,CAAC,AACD,UAAU,cAAC,CAAC,AACX,gBAAgB,CAAE,OAAO,CACzB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,EAAE,CACV,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC3B,CAAC,AACD,wBAAU,MAAM,AAAC,CAAC,AACjB,OAAO,CAAE,OAAO,CAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,SAAS,CAAC,CAAC,UAAU,CAClC,IAAI,CAAE,GAAG,CACT,cAAc,CAAE,IAAI,CACpB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,AACjC,CAAC,AAED,wBAAU,MAAM,AAAC,CAAC,AACjB,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACD,wBAAU,OAAO,AAAC,CAAC,AAClB,gBAAgB,CAAE,OAAO,AAC1B,CAAC;AC5ED,IAAI,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,AACtB,CAAC,AACD,OAAO,eAAC,CAAC,AACR,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC"
}